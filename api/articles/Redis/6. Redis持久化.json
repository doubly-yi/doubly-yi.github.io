{"title":"6. Redis持久化","uid":"d75529aa97ccd14fd62310763631c690","slug":"Redis/6. Redis持久化","date":"2021-10-20T14:49:26.000Z","updated":"2021-10-20T15:42:43.592Z","comments":true,"path":"api/articles/Redis/6. Redis持久化.json","keywords":null,"cover":"/images/default-cover.jpg","content":"<h1 id=\"RDB\"><a href=\"#RDB\" class=\"headerlink\" title=\"RDB\"></a>RDB</h1><p>RDB（Redis Database）</p>\n<p>Redis会单独创建（fork）一个子进程来进行持久化，会先将数据写入到一个临时文件，待持久化过程都结束了，再用这个临时文件替换上次持久化的文件。整个过程中，主进程不进行IO操作，这就确保了极高的性能。</p>\n<p>如果需要大规模的数据恢复，且对于数据的完整度不是非常敏感，那RDB方式要比AOF方式更加的高效。RDB的缺点是最后一次持久化后的数据可能会丢失（例如Redis突然宕机）</p>\n<h2 id=\"触发规则\"><a href=\"#触发规则\" class=\"headerlink\" title=\"触发规则\"></a>触发规则</h2><ol>\n<li>save的规则满足情况下，会自动触发rdb持久化</li>\n<li>执行fulshall命令，会自动触发rdb持久化</li>\n<li>Redis shutdown时，也会生成一个rdb文件</li>\n</ol>\n<h2 id=\"如何恢复RDB文件\"><a href=\"#如何恢复RDB文件\" class=\"headerlink\" title=\"如何恢复RDB文件\"></a>如何恢复RDB文件</h2><p>只需要将RDB文件放到reids启动目录下即可，redis会自动读取rdb文件。有时候生产环境我们还会对rdb文件进行备份。</p>\n<h2 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h2><ol>\n<li>适合大规模的数据恢复</li>\n<li>对数据的完整度要求不高</li>\n</ol>\n<h2 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h2><ol>\n<li>需要一定的时间间隔进行操作。如果Redis意外宕机了，最后一次持久化的数据就没有了</li>\n<li>fork进程的时候，会占用一定的内存空间</li>\n</ol>\n<h1 id=\"AOF\"><a href=\"#AOF\" class=\"headerlink\" title=\"AOF\"></a>AOF</h1><p>AOF （Append Only File）</p>\n<p>以日志的形式来记录每个操作，将Redis执行过的所有命令记录下来（读操作不记录），只许追加文件但不可以改文件，redis启动之初会读取该文件重新构建数据。换言之，redis重启的话就根据日志文件的内容将写指令从前到后执行一次以完成数据的恢复工作。</p>\n<p>如果AOF文件有错误，redis将启动失败。redis同事提供了一个aof修复工具<code>redis-check-aof</code>，使用命令<code>redis-check-aof --fix appendonly.aof</code>就可以修复错误（<strong>删除错误的一条命令</strong>）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">doubly@xiaoyizideMacBook-Pro bin % redis-check-aof --fix appendonly.aof\n0x              6a: Expected \\r\\n, got: 7364\nAOF analyzed: size&#x3D;128, ok_up_to&#x3D;81, ok_up_to_line&#x3D;26, diff&#x3D;47\nThis will shrink the AOF from 128 bytes, with 47 bytes, to 81 bytes\nContinue? [y&#x2F;N]: y\nSuccessfully truncated AOF</code></pre>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#每次修改都会sync，消耗性能\nappendfsync always\n#每秒执行一次sync，可能会丢失这1s的数据\nappendfsync everysec\n#不执行sync，这个时候操作系统自己同步数据，速度最快\nappendfsync no</code></pre>\n\n<h2 id=\"重写规则\"><a href=\"#重写规则\" class=\"headerlink\" title=\"重写规则\"></a>重写规则</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">auto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb</code></pre>\n\n<p>如果AOF文件大于64M，就会fork一个新的子进程将我们的文件来进行重写</p>\n<h2 id=\"优点-1\"><a href=\"#优点-1\" class=\"headerlink\" title=\"优点\"></a>优点</h2><ol>\n<li> 每一次修改都同步，文件的完整会更加好。</li>\n<li> 每秒同步一次，可能会丢失一秒的数据</li>\n<li> 从不同步，效率最高</li>\n</ol>\n<h2 id=\"缺点-1\"><a href=\"#缺点-1\" class=\"headerlink\" title=\"缺点\"></a>缺点</h2><ol>\n<li>相对于数据文件来说，aof远远大于rdb，修复速度也比rdb慢</li>\n<li>AOF运行效率也要比rdb慢，所以我们redis默认的配置就是rdb持久化</li>\n</ol>\n","text":"RDBRDB（Redis Database） Redis会单独创建（fork）一个子进程来进行持久化，会先将数据写入到一个临时文件，待持久化过程都结束了，再用这个临时文件替换上次持久化的文件。整个过程中，主进程不进行IO操作，这就确保了极高的性能。 如果需要大规模的数据恢复，且对...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"Redis","slug":"Redis","count":10,"path":"api/tags/Redis.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#RDB\"><span class=\"toc-text\">RDB</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A6%E5%8F%91%E8%A7%84%E5%88%99\"><span class=\"toc-text\">触发规则</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E6%81%A2%E5%A4%8DRDB%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">如何恢复RDB文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">优点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">缺点</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#AOF\"><span class=\"toc-text\">AOF</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99\"><span class=\"toc-text\">重写规则</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%98%E7%82%B9-1\"><span class=\"toc-text\">优点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%BA%E7%82%B9-1\"><span class=\"toc-text\">缺点</span></a></li></ol></li></ol>","author":{"name":"小益子","slug":"blog-author","avatar":"/images/HeadPhoto.jpg","link":"/","description":"小益子的个人博客","socials":{"github":"https://github.com/doubly-yi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_18335837","juejin":"","customs":{"gitee":{"icon":"/icons/gitee2.svg","link":"https://gitee.com/doubly"},"bilibili":{"icon":"/icons/bilibili.svg","link":"https://space.bilibili.com/294694129"}}}},"mapped":true,"prev_post":{"title":"7. Redis消息订阅","uid":"fbeb9b890e6ad27f2985f31986833c5a","slug":"Redis/7. redis消息订阅","date":"2021-10-20T14:49:27.000Z","updated":"2021-10-20T15:42:50.500Z","comments":true,"path":"api/articles/Redis/7. redis消息订阅.json","keywords":null,"cover":"/images/default-cover.jpg","text":"相关命令 psubscribe 订阅一个或多个符合给定模式的频道 pubsub 查看订阅与发布系统状态 publish 将信息发送到指定的频道 punsubscribe 退订所有给定模式的频道 subscribe 订阅给定的一个或多个频道的信息 unsubscribe 退订给定的...","link":"","photos":[],"count_time":{"symbolsCount":672,"symbolsTime":"1 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"Redis","slug":"Redis","count":10,"path":"api/tags/Redis.json"}],"author":{"name":"小益子","slug":"blog-author","avatar":"/images/HeadPhoto.jpg","link":"/","description":"小益子的个人博客","socials":{"github":"https://github.com/doubly-yi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_18335837","juejin":"","customs":{"gitee":{"icon":"/icons/gitee2.svg","link":"https://gitee.com/doubly"},"bilibili":{"icon":"/icons/bilibili.svg","link":"https://space.bilibili.com/294694129"}}}}},"next_post":{"title":"5. Redis Conf详解","uid":"a0274a1990a09ab30c455a7b67d6d5c7","slug":"Redis/5. Redis Conf详解","date":"2021-10-20T14:49:25.000Z","updated":"2021-10-20T15:42:35.992Z","comments":true,"path":"api/articles/Redis/5. Redis Conf详解.json","keywords":null,"cover":"/images/default-cover.jpg","text":" 单位 单位大小写不敏感 # Note on units: when memory size is needed, it is possible to specify # it in the usual form of 1k 5GB 4M and so forth: # # 1k...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"Redis","slug":"Redis","count":10,"path":"api/tags/Redis.json"}],"author":{"name":"小益子","slug":"blog-author","avatar":"/images/HeadPhoto.jpg","link":"/","description":"小益子的个人博客","socials":{"github":"https://github.com/doubly-yi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_18335837","juejin":"","customs":{"gitee":{"icon":"/icons/gitee2.svg","link":"https://gitee.com/doubly"},"bilibili":{"icon":"/icons/bilibili.svg","link":"https://space.bilibili.com/294694129"}}}}}}