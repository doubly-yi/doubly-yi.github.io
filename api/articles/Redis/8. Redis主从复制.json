{"title":"8. Redis主从复制","uid":"a29736afc3281cd9df989ab2a6d0da6b","slug":"Redis/8. Redis主从复制","date":"2021-10-20T14:49:28.000Z","updated":"2021-10-20T15:42:59.069Z","comments":true,"path":"api/articles/Redis/8. Redis主从复制.json","keywords":null,"cover":"/images/default-cover.jpg","content":"<h1 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h1><p>主从复制,是指将一台Redis服务器的数据,复制到其他的Redis服务器。前者称为主节点(masterleader) ,后者称为从节点<br>(slavefolldwer) ;==数据的复制是单向的,只能由主节点到从节点==。Master以写为主, Slave以读为主</p>\n<p>==默认情况下,每台Redis服务器都是主节点==;且一个主节点可以有多个从节点(或没有从节点),但一个从节点只能有一个主节点。</p>\n<h1 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h1><p>主从复制的作用主要包括:</p>\n<ol>\n<li>数据冗余:主从复制实现了数据的热备份,是持久化之外的一种数据冗余方式。</li>\n<li>故障恢复:当主节点出现问题时,可以由从节点提供服务,实现快速的故障恢复;实际上是一种服务的冗余。</li>\n<li>负载均衡:在主从复制的基础上,配合读写分离,可以由主节点提供写服务,由从节点提供读服务(即写Redis数据时应用连接<br>主节点,读Redis数据时应用连接从节点) ,分担服务器负载;尤其是在写少读多的场景下,通过多个从节点分担读负载,可以大<br>大提高Redis服务器的并发量。</li>\n<li>高可用基石:除了上述作用以外,主从复制还是哨兵和集群能够实施的基础,因此说主从复制是Redis高可用的基础。</li>\n</ol>\n<p>一般来说,要将Redis运用于工程项目中,只使用一台Redis是万万不能的(宕机) ,原因如下:</p>\n<ol>\n<li>从结构上,单个Redis服务器会发生单点故障,并且一台服务器需要处理所有的请求负载,压力较大;</li>\n<li>从容量上,单个Redis服务器内存容量有限,就算一台Redis服务器内存容量为256G,也不能将所有内存用作Redis存储内存<br>一般来说,单台Redis最大使用内存不应该超过20G<br>电商网站上的商品,一般都是一次上传,无数次浏览的,说专业点也就是”多读少写”。</li>\n</ol>\n<h1 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h1><p>主从信息查询</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">127.0.0.1:6379&gt; info replication #查看主从信息\n# Replication\nrole:master # 角色，是主机还是从机\nconnected_slaves:0 # 从机个数\nmaster_failover_state:no-failover\nmaster_replid:95e7380696b57cef74de81d4673e127a7619fda0\nmaster_replid2:0000000000000000000000000000000000000000\nmaster_repl_offset:0\nsecond_repl_offset:-1\nrepl_backlog_active:0\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:0\nrepl_backlog_histlen:0</code></pre>\n\n<p>配置文件修改项（避免重复覆盖）</p>\n<ol>\n<li>端口号</li>\n<li>PID文件</li>\n<li>Log文件</li>\n<li>rdb文件</li>\n</ol>\n<h2 id=\"第一种方式\"><a href=\"#第一种方式\" class=\"headerlink\" title=\"第一种方式\"></a>第一种方式</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">graph LR\n主机A--&gt;从机B\n主机A--&gt;从机C</code></pre>\n\n<h3 id=\"配置信息\"><a href=\"#配置信息\" class=\"headerlink\" title=\"配置信息\"></a>配置信息</h3><p>配置从机</p>\n<ol>\n<li><p>命令配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 配置主机IP和端口\n127.0.0.1:6380&gt; SLAVEOF 127.0.0.1 6379\nOK</code></pre></li>\n<li><p>配置文件配置</p>\n</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">replicaof 127.0.0.1 6379</code></pre>\n\n\n<p>从机信息</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">127.0.0.1:6380&gt; info replication\n# Replication\nrole:slave\nmaster_host:127.0.0.1\nmaster_port:6379\nmaster_link_status:up\nmaster_last_io_seconds_ago:1\nmaster_sync_in_progress:0\nslave_repl_offset:14\nslave_priority:100\nslave_read_only:1\nreplica_announced:1\nconnected_slaves:0\nmaster_failover_state:no-failover\nmaster_replid:cf02d21e7fd2d53056311c0c1550e0d08c02c789\nmaster_replid2:0000000000000000000000000000000000000000\nmaster_repl_offset:14\nsecond_repl_offset:-1\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:14</code></pre>\n\n<p>主机信息</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">127.0.0.1:6379&gt; info replication\n# Replication\nrole:master\nconnected_slaves:2\nslave0:ip&#x3D;127.0.0.1,port&#x3D;6380,state&#x3D;online,offset&#x3D;224,lag&#x3D;1\nslave1:ip&#x3D;127.0.0.1,port&#x3D;6381,state&#x3D;online,offset&#x3D;224,lag&#x3D;1\nmaster_failover_state:no-failover\nmaster_replid:cf02d21e7fd2d53056311c0c1550e0d08c02c789\nmaster_replid2:0000000000000000000000000000000000000000\nmaster_repl_offset:224\nsecond_repl_offset:-1\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:224</code></pre>\n\n<h3 id=\"功能测试\"><a href=\"#功能测试\" class=\"headerlink\" title=\"功能测试\"></a>功能测试</h3><p>从机自动同步</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#主机设置值\n127.0.0.1:6379&gt; set k3 v3\nOK\n#从机自动同步\n127.0.0.1:6380&gt; keys *\n1) &quot;k3&quot;\n2) &quot;k1&quot;\n3) &quot;k2&quot;</code></pre>\n\n<p>从机只读</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">127.0.0.1:6381&gt; set k4 v4\n(error) READONLY You can&#39;t write against a read only replica.</code></pre>\n\n<p>主机断开</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#主机断开（宕机）\n127.0.0.1:6379&gt; shutdown\nnot connected&gt; \n\n#从机默认依旧作为从机连接主机\n127.0.0.1:6381&gt; info replication\n# Replication\nrole:slave\nmaster_host:127.0.0.1\nmaster_port:6379\nmaster_link_status:down\nmaster_last_io_seconds_ago:-1\nmaster_sync_in_progress:0\nslave_repl_offset:17062\nmaster_link_down_since_seconds:7\nslave_priority:100\nslave_read_only:1\nreplica_announced:1\nconnected_slaves:0\nmaster_failover_state:no-failover\nmaster_replid:cf02d21e7fd2d53056311c0c1550e0d08c02c789\nmaster_replid2:0000000000000000000000000000000000000000\nmaster_repl_offset:17062\nsecond_repl_offset:-1\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:183\nrepl_backlog_histlen:16880</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>主机断开后，从机依旧作为从机连接主机，集群就只有读功能，没有写操作。如果主机回来，从机依旧可以直接获取到主机信息。配置哨兵模式后，可以自动选举一个作为主机。</p></blockquote>\n<p>如果使用命令行配置主从，是不持久的，如果重启了，就会变回主机。配置文件中配置主从是持久生效的。</p>\n<p>从机成功连接到主机后，会发送一个sync同步命令。主机接到命令，启动后台的存盘进程，同时收集所有接收到的用于修改数据集命令，在后台进程执行完毕之后，主机将传送整个数据文件到从机，并完成一次完全同步（==这个叫全量复制，后面主机新增值，依次将修改命令传给从机执行，叫做增量复制==）。</p>\n<h2 id=\"第二种方式\"><a href=\"#第二种方式\" class=\"headerlink\" title=\"第二种方式\"></a>第二种方式</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">graph LR\n主机A--&gt;从机B\n从机B--&gt;从机C</code></pre>\n\n<h3 id=\"配置信息-1\"><a href=\"#配置信息-1\" class=\"headerlink\" title=\"配置信息\"></a>配置信息</h3><p>从机A</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">slaveof 127.0.0.1 6379</code></pre>\n<p>从机B</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">slaveof 127.0.0.1 6380</code></pre>\n\n<h3 id=\"功能测试-1\"><a href=\"#功能测试-1\" class=\"headerlink\" title=\"功能测试\"></a>功能测试</h3><p> 主机断开，从机手动变为主机</p>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">slaveof no one</code></pre>\n<p> 从机B当选主机，从机C连接B<br> <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"> 127.0.0.1:6380&gt; info replication\n# Replication\nrole:master\nconnected_slaves:1\nslave0:ip&#x3D;127.0.0.1,port&#x3D;6381,state&#x3D;online,offset&#x3D;1288,lag&#x3D;0\nmaster_failover_state:no-failover\nmaster_replid:a7131f2ad29e3d74b13249f34c96851590a3c988\nmaster_replid2:7fb1815699259ae0976825b8385930bddd79837f\nmaster_repl_offset:1288\nsecond_repl_offset:99\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:43\nrepl_backlog_histlen:1246</code></pre></p>\n<p> 主机A重启后，B依然当主机</p>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"> 127.0.0.1:6379&gt; info replication\n# Replication\nrole:master\nconnected_slaves:0\nmaster_failover_state:no-failover\nmaster_replid:ccc698a2310cd9e474745d6943768e2c70d942c0\nmaster_replid2:0000000000000000000000000000000000000000\nmaster_repl_offset:0\nsecond_repl_offset:-1\nrepl_backlog_active:0\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:0\nrepl_backlog_histlen:0\n </code></pre>\n\n<h2 id=\"第三种：哨兵模式（自动选举）\"><a href=\"#第三种：哨兵模式（自动选举）\" class=\"headerlink\" title=\"第三种：哨兵模式（自动选举）\"></a>第三种：哨兵模式（自动选举）</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">graph LR\n哨兵--&gt;主机A\n主机A--&gt;从机B\n哨兵--&gt;从机B\n哨兵--&gt;从机C\n主机A--&gt;从机C</code></pre>\n\n\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vim sentinel.conf\n\nsentinel monitor myredis 127.0.0.1 6379 1</code></pre>\n\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">doubly@xiaoyizideMacBook-Pro bin % redis-sentinel doublyConfig&#x2F;sentinel.conf \n66451:X 28 Jun 2021 13:39:32.117 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\n66451:X 28 Jun 2021 13:39:32.117 # Redis version&#x3D;6.2.4, bits&#x3D;64, commit&#x3D;00000000, modified&#x3D;0, pid&#x3D;66451, just started\n66451:X 28 Jun 2021 13:39:32.117 # Configuration loaded\n66451:X 28 Jun 2021 13:39:32.119 * Increased maximum number of open files to 10032 (it was originally set to 256).\n66451:X 28 Jun 2021 13:39:32.119 * monotonic clock: POSIX clock_gettime\n                _._                                                  \n           _.-&#96;&#96;__ &#39;&#39;-._                                             \n      _.-&#96;&#96;    &#96;.  &#96;_.  &#39;&#39;-._           Redis 6.2.4 (00000000&#x2F;0) 64 bit\n  .-&#96;&#96; .-&#96;&#96;&#96;.  &#96;&#96;&#96;\\&#x2F;    _.,_ &#39;&#39;-._                                  \n (    &#39;      ,       .-&#96;  | &#96;,    )     Running in sentinel mode\n |&#96;-._&#96;-...-&#96; __...-.&#96;&#96;-._|&#39;&#96; _.-&#39;|     Port: 26379\n |    &#96;-._   &#96;._    &#x2F;     _.-&#39;    |     PID: 66451\n  &#96;-._    &#96;-._  &#96;-.&#x2F;  _.-&#39;    _.-&#39;                                   \n |&#96;-._&#96;-._    &#96;-.__.-&#39;    _.-&#39;_.-&#39;|                                  \n |    &#96;-._&#96;-._        _.-&#39;_.-&#39;    |           https:&#x2F;&#x2F;redis.io       \n  &#96;-._    &#96;-._&#96;-.__.-&#39;_.-&#39;    _.-&#39;                                   \n |&#96;-._&#96;-._    &#96;-.__.-&#39;    _.-&#39;_.-&#39;|                                  \n |    &#96;-._&#96;-._        _.-&#39;_.-&#39;    |                                  \n  &#96;-._    &#96;-._&#96;-.__.-&#39;_.-&#39;    _.-&#39;                                   \n      &#96;-._    &#96;-.__.-&#39;    _.-&#39;                                       \n          &#96;-._        _.-&#39;                                           \n              &#96;-.__.-&#39;                                               \n\n66451:X 28 Jun 2021 13:39:32.124 # Sentinel ID is 8c6e1549c754881a4f65cc855dfb9569409762a1\n66451:X 28 Jun 2021 13:39:32.124 # +monitor master myredis 127.0.0.1 6379 quorum 1\n66451:X 28 Jun 2021 13:39:32.127 * +slave slave 127.0.0.1:6380 127.0.0.1 6380 @ myredis 127.0.0.1 6379\n66451:X 28 Jun 2021 13:39:32.129 * +slave slave 127.0.0.1:6381 127.0.0.1 6381 @ myredis 127.0.0.1 6379</code></pre>\n\n<p>主机shutdown后的哨兵日志</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">66451:X 28 Jun 2021 13:42:26.257 # +sdown master myredis 127.0.0.1 6379\n66451:X 28 Jun 2021 13:42:26.257 # +odown master myredis 127.0.0.1 6379 #quorum 1&#x2F;1\n66451:X 28 Jun 2021 13:42:26.257 # +new-epoch 1\n66451:X 28 Jun 2021 13:42:26.257 # +try-failover master myredis 127.0.0.1 6379\n66451:X 28 Jun 2021 13:42:26.261 # +vote-for-leader 8c6e1549c754881a4f65cc855dfb9569409762a1 1\n66451:X 28 Jun 2021 13:42:26.261 # +elected-leader master myredis 127.0.0.1 6379\n66451:X 28 Jun 2021 13:42:26.261 # +failover-state-select-slave master myredis 127.0.0.1 6379\n66451:X 28 Jun 2021 13:42:26.330 # +selected-slave slave 127.0.0.1:6381 127.0.0.1 6381 @ myredis 127.0.0.1 6379\n66451:X 28 Jun 2021 13:42:26.330 * +failover-state-send-slaveof-noone slave 127.0.0.1:6381 127.0.0.1 6381 @ myredis 127.0.0.1 6379\n66451:X 28 Jun 2021 13:42:26.414 * +failover-state-wait-promotion slave 127.0.0.1:6381 127.0.0.1 6381 @ myredis 127.0.0.1 6379\n66451:X 28 Jun 2021 13:42:26.820 # +promoted-slave slave 127.0.0.1:6381 127.0.0.1 6381 @ myredis 127.0.0.1 6379\n66451:X 28 Jun 2021 13:42:26.820 # +failover-state-reconf-slaves master myredis 127.0.0.1 6379\n66451:X 28 Jun 2021 13:42:26.876 * +slave-reconf-sent slave 127.0.0.1:6380 127.0.0.1 6380 @ myredis 127.0.0.1 6379\n66451:X 28 Jun 2021 13:42:27.881 * +slave-reconf-inprog slave 127.0.0.1:6380 127.0.0.1 6380 @ myredis 127.0.0.1 6379\n66451:X 28 Jun 2021 13:42:27.881 * +slave-reconf-done slave 127.0.0.1:6380 127.0.0.1 6380 @ myredis 127.0.0.1 6379\n66451:X 28 Jun 2021 13:42:27.961 # +failover-end master myredis 127.0.0.1 6379\n66451:X 28 Jun 2021 13:42:27.961 # +switch-master myredis 127.0.0.1 6379 127.0.0.1 6381\n66451:X 28 Jun 2021 13:42:27.962 * +slave slave 127.0.0.1:6380 127.0.0.1 6380 @ myredis 127.0.0.1 6381\n66451:X 28 Jun 2021 13:42:27.962 * +slave slave 127.0.0.1:6379 127.0.0.1 6379 @ myredis 127.0.0.1 6381\n66451:X 28 Jun 2021 13:42:58.037 # +sdown slave 127.0.0.1:6379 127.0.0.1 6379 @ myredis 127.0.0.1 6381</code></pre>\n\n<p>6380自动指向6381</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">127.0.0.1:6380&gt; info replication\n# Replication\nrole:slave\nmaster_host:127.0.0.1\nmaster_port:6381\nmaster_link_status:up\nmaster_last_io_seconds_ago:2\nmaster_sync_in_progress:0\nslave_repl_offset:34018\nslave_priority:100\nslave_read_only:1\nreplica_announced:1\nconnected_slaves:0\nmaster_failover_state:no-failover\nmaster_replid:9eccaf8f6170f964eab0efa6e894526fc243fda3\nmaster_replid2:d25e84c3694901fea82095385a55d5f487014a28\nmaster_repl_offset:34018\nsecond_repl_offset:9600\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:34018</code></pre>\n\n<p>6381被选举为主机</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">127.0.0.1:6381&gt; info replication\n# Replication\nrole:master\nconnected_slaves:1\nslave0:ip&#x3D;127.0.0.1,port&#x3D;6380,state&#x3D;online,offset&#x3D;38750,lag&#x3D;1\nmaster_failover_state:no-failover\nmaster_replid:9eccaf8f6170f964eab0efa6e894526fc243fda3\nmaster_replid2:d25e84c3694901fea82095385a55d5f487014a28\nmaster_repl_offset:38750\nsecond_repl_offset:9600\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:38750</code></pre>\n\n<p>==重新连回来的主机被归并到6381做从机==</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">127.0.0.1:6381&gt; info replication\n# Replication\nrole:master\nconnected_slaves:2\nslave0:ip&#x3D;127.0.0.1,port&#x3D;6380,state&#x3D;online,offset&#x3D;47931,lag&#x3D;1\nslave1:ip&#x3D;127.0.0.1,port&#x3D;6379,state&#x3D;online,offset&#x3D;47931,lag&#x3D;0\nmaster_failover_state:no-failover\nmaster_replid:9eccaf8f6170f964eab0efa6e894526fc243fda3\nmaster_replid2:d25e84c3694901fea82095385a55d5f487014a28\nmaster_repl_offset:48063\nsecond_repl_offset:9600\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:48063</code></pre>","feature":true,"text":"概念主从复制,是指将一台Redis服务器的数据,复制到其他的Redis服务器。前者称为主节点(masterleader) ,后者称为从节点(slavefolldwer) ;==数据的复制是单向的,只能由主节点到从节点==。Master以写为主, Slave以读为主 ==默认情况下...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"Redis","slug":"Redis","count":10,"path":"api/tags/Redis.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">概念</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">作用</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">环境搭建</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E7%A7%8D%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">第一种方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">配置信息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">功能测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E7%A7%8D%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">第二种方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF-1\"><span class=\"toc-text\">配置信息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95-1\"><span class=\"toc-text\">功能测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E7%A7%8D%EF%BC%9A%E5%93%A8%E5%85%B5%E6%A8%A1%E5%BC%8F%EF%BC%88%E8%87%AA%E5%8A%A8%E9%80%89%E4%B8%BE%EF%BC%89\"><span class=\"toc-text\">第三种：哨兵模式（自动选举）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8\"><span class=\"toc-text\">启动</span></a></li></ol></li></ol></li></ol>","author":{"name":"小益子","slug":"blog-author","avatar":"/images/HeadPhoto.jpg","link":"/","description":"小益子的个人博客","socials":{"github":"https://github.com/doubly-yi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_18335837","juejin":"","customs":{"gitee":{"icon":"/icons/gitee2.svg","link":"https://gitee.com/doubly"},"bilibili":{"icon":"/icons/bilibili.svg","link":"https://space.bilibili.com/294694129"}}}},"mapped":true,"prev_post":{"title":"9. Redis缓存穿透和雪崩","uid":"9a59448677a38ca58ea31f28d19c2b63","slug":"Redis/9. redis缓存穿透和雪崩","date":"2021-10-20T14:49:29.000Z","updated":"2021-10-20T15:43:04.666Z","comments":true,"path":"api/articles/Redis/9. redis缓存穿透和雪崩.json","keywords":null,"cover":"/images/default-cover.jpg","text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"Redis","slug":"Redis","count":10,"path":"api/tags/Redis.json"}],"author":{"name":"小益子","slug":"blog-author","avatar":"/images/HeadPhoto.jpg","link":"/","description":"小益子的个人博客","socials":{"github":"https://github.com/doubly-yi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_18335837","juejin":"","customs":{"gitee":{"icon":"/icons/gitee2.svg","link":"https://gitee.com/doubly"},"bilibili":{"icon":"/icons/bilibili.svg","link":"https://space.bilibili.com/294694129"}}}},"feature":true},"next_post":{"title":"7. Redis消息订阅","uid":"fbeb9b890e6ad27f2985f31986833c5a","slug":"Redis/7. redis消息订阅","date":"2021-10-20T14:49:27.000Z","updated":"2021-10-20T15:42:50.500Z","comments":true,"path":"api/articles/Redis/7. redis消息订阅.json","keywords":null,"cover":"/images/default-cover.jpg","text":"相关命令 psubscribe 订阅一个或多个符合给定模式的频道 pubsub 查看订阅与发布系统状态 publish 将信息发送到指定的频道 punsubscribe 退订所有给定模式的频道 subscribe 订阅给定的一个或多个频道的信息 unsubscribe 退订给定的...","link":"","photos":[],"count_time":{"symbolsCount":672,"symbolsTime":"1 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"Redis","slug":"Redis","count":10,"path":"api/tags/Redis.json"}],"author":{"name":"小益子","slug":"blog-author","avatar":"/images/HeadPhoto.jpg","link":"/","description":"小益子的个人博客","socials":{"github":"https://github.com/doubly-yi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_18335837","juejin":"","customs":{"gitee":{"icon":"/icons/gitee2.svg","link":"https://gitee.com/doubly"},"bilibili":{"icon":"/icons/bilibili.svg","link":"https://space.bilibili.com/294694129"}}}}}}