{"title":"1. Redis概述","uid":"75c57edf98300619b2ad759418e62fac","slug":"Redis/1. Redis简介、安装、基本知识","date":"2021-10-20T14:49:21.000Z","updated":"2021-10-20T15:42:13.387Z","comments":true,"path":"api/articles/Redis/1. Redis简介、安装、基本知识.json","keywords":null,"cover":"/images/default-cover.jpg","content":"<h1 id=\"Redis概述\"><a href=\"#Redis概述\" class=\"headerlink\" title=\"Redis概述\"></a>Redis概述</h1><p><strong>Redis是什么?</strong></p>\n<p>Redis(==Re==mote ==di==ctionary ==s==erver)，即远程字典服务。<br>是一个开元的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多重语言的API。</p>\n<p><strong>Redis能干嘛？</strong></p>\n<ol>\n<li>内存存储、持久化，内存中是断电即失、所以说持久化很重要（RDB、AOF）</li>\n<li>效率高，可以用于高速缓存</li>\n<li>发布订阅系统</li>\n<li>地图信息分析</li>\n<li>计时器、计数器（浏览量…）</li>\n<li>…</li>\n</ol>\n<p><strong>特性</strong></p>\n<ol>\n<li>多样的数据类型</li>\n<li>持久化</li>\n<li>集群</li>\n<li>事务</li>\n<li>…</li>\n</ol>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><ol>\n<li>下载，直接<a href=\"https://redis.io/\">官网下载</a>即可</li>\n<li><code>tar -zxvf</code>解压下载的redis-*.tar.gz</li>\n<li><code>make</code> 命令执行安装</li>\n<li><code>make install</code>将redis安装到<code>/usr/local/bin</code>目录下</li>\n<li><code>cp redis.conf /usr/local/bin/doublyConfig</code>，将redis的配置文件拷贝一份，后续使用修改该配置文件。方便出问题复原</li>\n<li><code>vim redis.conf</code>，编辑配置文件，<code>\\daemonize</code>搜索daemonize，将值改为yes，表示以后台的方式启动</li>\n<li><code>redis-server doublyConfig/redis.conf</code>，使用修改的配置文件启动redis</li>\n<li><code>redis-cli -h localhost -p 6379</code>，使用redis客户端连接server。-h表示主机，-p表示端口</li>\n<li>客户端连接后，使用<code>ping</code>，返回<code>PONG</code>，表示连接成功；<code>set name doubly</code>设置键值对；<code>get name</code>获取键值对；</li>\n</ol>\n<h1 id=\"基础知识\"><a href=\"#基础知识\" class=\"headerlink\" title=\"基础知识\"></a>基础知识</h1><p><strong>Redis是单线程的</strong>（据说6.0的已经是多线程的了？）</p>\n<p>Redis是基于内存操作的，性能瓶颈已经不是CPU了，而是内存和网络带宽。</p>\n<p><strong>为什么Redis单线程还这么快？</strong></p>\n<ol>\n<li>多线程不一定就比单线程快，因为多线程要频繁的进行上下文切换，是非常耗时的。</li>\n<li>高性能服务器也不一定是多线程的。</li>\n<li>CPU &gt; 内存 &gt; 硬盘，Redis将所有的数据放在内存中。对于内存系统没有上下文切换，在一个CPU上完成。</li>\n</ol>\n<h2 id=\"Redis五大基础类型\"><a href=\"#Redis五大基础类型\" class=\"headerlink\" title=\"Redis五大基础类型\"></a>Redis五大基础类型</h2><ol>\n<li>String类型</li>\n<li>List类型（双向链表）</li>\n<li>Set类型（无序不重复集合）</li>\n<li>Hash类型（相当于Map）：适合对象的存储</li>\n<li>Zset类型（有序集合）</li>\n</ol>\n<h2 id=\"三大特殊类型\"><a href=\"#三大特殊类型\" class=\"headerlink\" title=\"三大特殊类型\"></a>三大特殊类型</h2><ol>\n<li>Geospatial类型（地理位置），基于Zset实现</li>\n<li>HyperLogLog类型，基于算法的基数（不重复的元素）统计的数据结构。0.81%的错误率，允许容错的情况下可以使用，只占用12KB的内存，统计效率高。</li>\n<li>BitMap类型，位图</li>\n</ol>\n<h2 id=\"基础命令\"><a href=\"#基础命令\" class=\"headerlink\" title=\"基础命令\"></a>基础命令</h2><p><code>set name doubly</code> , <code>get name</code>：设置、获取值</p>\n<p><code>exists name</code>：判断是否存在</p>\n<p><code>expire name 10</code>：设置过期时间（秒）</p>\n<p><code>ttl name</code>：查看key剩余时间</p>\n<p><code>move name 1</code>：移动name到数据库1</p>\n<ul>\n<li>数据库命令(select,dbsize)</li>\n</ul>\n<p>Redis默认有16个数据库</p>\n<p>配置文件中的位置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># Set the number of databases. The default database is DB 0, you can select\n# a different one on a per-connection basis using SELECT &lt;dbid&gt; where\n# dbid is a number between 0 and &#39;databases&#39;-1\ndatabases 16</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">127.0.0.1:6379&gt; DBSIZE #查看数据大小\n(integer) 5\n127.0.0.1:6379&gt; select 1 #切换数据库\nOK\n127.0.0.1:6379[1]&gt; keys * #查看所有的key\n(empty array) </code></pre>\n\n<ul>\n<li>清除数据库命令</li>\n</ul>\n<p><code>flushdb</code>：清除当前数据库</p>\n<p><code>flushall</code>：清除所有数据库</p>\n<ul>\n<li><p>String类型相关命令</p>\n<ul>\n<li><code>append name aaa</code>：追加字符串，如果key不存在，则创建key</li>\n<li><code>strlen name</code>：返回字符串长度</li>\n<li><code>incr views</code>：自增1</li>\n<li><code>decr views</code>：自减1</li>\n<li><code>incrby views 10</code>：自增步长</li>\n<li><code>decrby views 5</code>：自减步长</li>\n<li><code>getrange name 3 6</code>：截取字符串</li>\n<li><code>setrange name 3 abcd</code>：替换字符串</li>\n<li><code>setex name doubly 30</code>：set with expire，设置值并同时设置过期时间</li>\n<li><code>setnx name doubly</code>：set not exist，不存在则创建KV，存在则创建失败</li>\n<li><code>mset k1 v1 k2 v2 k3 v3</code>，<code>mget k1 k2 k3</code>：批量设置获取</li>\n<li><code>msetnx k1 v1 k4 v4</code>：setnx的批量操作，原子操作，一个失败就全部失败</li>\n<li>设置对象，user:{id}:{field}<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#设置一个对象，redis允许设置user:&#123;id&#125;:&#123;field&#125;格式\nmset user:1:name doubly age 12\n#同时获取对象的name和age\nmget user:1:name age</code></pre></li>\n<li><code>getset name doubly</code>：先获取，再设置。返回当前值，并设置新的值</li>\n</ul>\n</li>\n<li><p>List类型相关命令</p>\n<ul>\n<li><code>lpush list v1</code>：在list头部插入新元素，没有则创建</li>\n<li><code>rpush list v2</code>：在list尾部（右）插入新元素</li>\n<li><code>lrange list 0 -1</code>：获取列表一段范围的元素</li>\n<li><code>lpop list [2]</code>,<code>rpop list</code>：弹出list左/右侧的元素</li>\n<li><code>lindex list 2</code>：查看list某个下标的元素</li>\n<li><code>llen list</code>：查询list的长度</li>\n<li><code>lrem list 2 value</code>：移除list中2个value</li>\n<li><code>ltrim list 1 2</code>：截取list[1-2]</li>\n<li><code>rpoplpush list newlist</code>：弹出list最右侧的元素并插入到新的list中，最后返回元素</li>\n<li><code>lset list 0 newitem</code>：更新list某个下标的元素，<strong>如果key不存在则报错，如果下标不存在也报错</strong></li>\n<li><code>linsert list before|after value test</code>：在list中的value前|后插入新元素</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Set类型相关命令</p>\n<ul>\n<li><code>sadd myset doubly</code>：向set集合中新增一个元素，可以不存在则新建</li>\n<li><code>smembers myset</code>：查看set集合中的所有元素</li>\n<li><code>sismember myset doubly</code>：验证set集合中某个元素是否存在</li>\n<li><code>scard myset</code>：返回set集合中的元素个数</li>\n<li><code>srem myset doubly</code>：移除set集合中的指定元素</li>\n<li><code>srandmember myset</code>：获取set集合中的一个随机元素</li>\n<li><code>spop myset</code>：从set集合中随机删除一个元素</li>\n<li><code>smove myset newset doubly</code>：将元素从一个set集合移动到另一个set集合中</li>\n<li><code>sdiff myset newset</code>：获取两个set集合的差集。<strong>只获取myset有而newset没有的元素</strong></li>\n<li><code>sinter myset newset</code>：获取两个set集合的交集</li>\n<li><code>sunion myset newset</code>：获取两个set集合的并集</li>\n</ul>\n</li>\n<li><p>Hash类型相关命令</p>\n<ul>\n<li>hset，hget：设置获取hash</li>\n<li>hmset，hmget：批量设置，获取（hset，hget也可以批量，4.0以后官方启用hmset,hmget?）</li>\n<li>hgetall：获取所有的键值对</li>\n<li>hdel：删除某一个field</li>\n<li>hlen：获取hash长度</li>\n<li>hexists：判断field是否存在</li>\n<li>hkeys：获取hash所有的key</li>\n<li>kvals：获取hash所有的value</li>\n<li>hincrby，hdecrby：hash中field自增、自减</li>\n<li>hsetnx：当field不存在时设置值</li>\n</ul>\n</li>\n<li><p>Zset类型相关命令</p>\n<ul>\n<li>zadd：向zset中增加元素</li>\n<li>zrange,zrevrange：按照索引正序、倒序列出范围内的元素</li>\n<li>zrangebyscore,zrevrangebyscore：按照score正序、倒序列出范围内的元素</li>\n<li>zrem：移除zset中某一个元素</li>\n<li>zcard：统计zset长度</li>\n<li>zcount：统计某个score范围内的元素个数</li>\n</ul>\n</li>\n<li><p>Geospatial类型相关命令（Zset命令全部适用）</p>\n<ul>\n<li>geoadd：添加地理经纬度信息，经纬度有范围限制，超过则报错<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">127.0.0.1:6379&gt; geoadd city 116.40 39.90 beijing\n(integer) 1\n127.0.0.1:6379&gt; geoadd city 121.47 31.23 shanghai\n(integer) 1\n127.0.0.1:6379&gt; geoadd city 106.50 29.53 chongqing\n(integer) 1\n127.0.0.1:6379&gt; geoadd city 114.05 22.53 shenzhen\n(integer) 1\n127.0.0.1:6379&gt; geoadd city 120.16 30.24 hangzhou\n(integer) 1\n127.0.0.1:6379&gt; geoadd city 108.96 34.26 xian\n(integer) 1</code></pre></li>\n<li>geopos：获取某个地方的地理位置<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">127.0.0.1:6379&gt; geopos city beijing\n1) 1) &quot;116.39999896287918091&quot;\n   2) &quot;39.90000009167092543&quot;\n   \n127.0.0.1:6379&gt; geopos city beijing shenzhen\n1) 1) &quot;116.39999896287918091&quot;\n   2) &quot;39.90000009167092543&quot;\n2) 1) &quot;114.04999762773513794&quot;\n   2) &quot;22.52999956292396888&quot;</code></pre></li>\n<li>geodist：计算两地之间的距离<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">127.0.0.1:6379&gt; geodist city beijing shenzhen\n&quot;1944681.9952&quot;\n\n#设置单位\n127.0.0.1:6379&gt; geodist city beijing shenzhen km\n&quot;1944.6820&quot;\n127.0.0.1:6379&gt; geodist city beijing shanghai km\n&quot;1067.3788&quot;</code></pre></li>\n<li>georadius：查询某地范围内的地区<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">127.0.0.1:6379&gt; GEORADIUS city 114.05 22.50 1000 km\n1) &quot;shenzhen&quot;\n127.0.0.1:6379&gt; GEORADIUS city 114.05 22.50 10000 km\n1) &quot;chongqing&quot;\n2) &quot;xian&quot;\n3) &quot;shenzhen&quot;\n4) &quot;hangzhou&quot;\n5) &quot;shanghai&quot;\n6) &quot;beijing&quot;\n\n# 带上经纬度信息\n127.0.0.1:6379&gt; GEORADIUS city 114.05 22.50 5000 km withcoord \n1) 1) &quot;chongqing&quot;\n   2) 1) &quot;106.49999767541885376&quot;\n      2) &quot;29.52999957900659211&quot;\n2) 1) &quot;xian&quot;\n   2) 1) &quot;108.96000176668167114&quot;\n      2) &quot;34.25999964418929977&quot;\n3) 1) &quot;shenzhen&quot;\n   2) 1) &quot;114.04999762773513794&quot;\n      2) &quot;22.52999956292396888&quot;\n4) 1) &quot;hangzhou&quot;\n   2) 1) &quot;120.1600000262260437&quot;\n      2) &quot;30.2400003229490224&quot;\n5) 1) &quot;shanghai&quot;\n   2) 1) &quot;121.47000163793563843&quot;\n      2) &quot;31.22999903975783553&quot;\n6) 1) &quot;beijing&quot;\n   2) 1) &quot;116.39999896287918091&quot;\n      2) &quot;39.90000009167092543&quot;\n      \n# 限定统计个数\n127.0.0.1:6379&gt; GEORADIUS city 114.05 22.50 5000 km withcoord count 1\n1) 1) &quot;shenzhen&quot;\n   2) 1) &quot;114.04999762773513794&quot;\n      2) &quot;22.52999956292396888&quot;\n127.0.0.1:6379&gt; GEORADIUS city 114.05 22.50 5000 km withcoord count 2\n1) 1) &quot;shenzhen&quot;\n   2) 1) &quot;114.04999762773513794&quot;\n      2) &quot;22.52999956292396888&quot;\n2) 1) &quot;hangzhou&quot;\n   2) 1) &quot;120.1600000262260437&quot;\n      2) &quot;30.2400003229490224&quot;\n      \n#带上距离\n127.0.0.1:6379&gt; GEORADIUS city 114.05 22.50 5000 km withcoord withdist count 2\n1) 1) &quot;shenzhen&quot;\n   2) &quot;3.3367&quot;\n   3) 1) &quot;114.04999762773513794&quot;\n      2) &quot;22.52999956292396888&quot;\n2) 1) &quot;hangzhou&quot;\n   2) &quot;1053.9526&quot;\n   3) 1) &quot;120.1600000262260437&quot;\n      2) &quot;30.2400003229490224&quot;</code></pre></li>\n<li>georadiusbymember：使用存入redis的地区进行范围查找<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">127.0.0.1:6379&gt; GEORADIUSBYMEMBER city chongqing 1000 km\n1) &quot;chongqing&quot;\n2) &quot;xian&quot;\n127.0.0.1:6379&gt; GEORADIUSBYMEMBER city chongqing 2000 km\n1) &quot;chongqing&quot;\n2) &quot;xian&quot;\n3) &quot;shenzhen&quot;\n4) &quot;hangzhou&quot;\n5) &quot;shanghai&quot;\n6) &quot;beijing&quot;\n127.0.0.1:6379&gt; GEORADIUSBYMEMBER city shanghai 1000 km\n1) &quot;hangzhou&quot;\n2) &quot;shanghai&quot;</code></pre></li>\n<li>geohash：返回地方经纬度的hash<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">127.0.0.1:6379&gt; geohash city shenzhen\n1) &quot;ws105m2wv80&quot;\n127.0.0.1:6379&gt; geohash city shenzhen beijing\n1) &quot;ws105m2wv80&quot;\n2) &quot;wx4fbxxfke0&quot;</code></pre></li>\n</ul>\n</li>\n<li><p>HyperLogLog类型相关命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#pfadd 添加元素\n127.0.0.1:6379&gt; pfadd k1 a b d e f g h i\n(integer) 1\n#pfcount 统计基数个数\n127.0.0.1:6379&gt; pfcount k1\n(integer) 8\n127.0.0.1:6379&gt; pfadd k2 h i j k\n(integer) 1\n127.0.0.1:6379&gt; pfcount k2\n(integer) 4\n#pfmerge 合并两组元素到一个新的key中\n127.0.0.1:6379&gt; pfmerge k3 k1 k2\nOK\n127.0.0.1:6379&gt; pfcount k3\n(integer) 10\n#去除重复计数\n127.0.0.1:6379&gt; pfadd k4 a a a a b\n(integer) 1\n127.0.0.1:6379&gt; pfcount k4\n(integer) 2</code></pre></li>\n<li><p>BitMap类型命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#添加一个元素\n127.0.0.1:6379&gt; setbit sign 0 1\n(integer) 0\n127.0.0.1:6379&gt; setbit sign 1 0\n(integer) 0\n127.0.0.1:6379&gt; setbit sign 2 0\n(integer) 0\n127.0.0.1:6379&gt; setbit sign 3 0\n(integer) 0\n#获取某一个元素\n127.0.0.1:6379&gt; getbit sign 2\n(integer) 0\n#统计值为1的数量\n127.0.0.1:6379&gt; bitcount sign\n(integer) 1</code></pre></li>\n</ul>\n","text":"Redis概述Redis是什么? Redis(==Re==mote ==di==ctionary ==s==erver)，即远程字典服务。是一个开元的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多重语言的API。 Redis能...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"Redis","slug":"Redis","count":10,"path":"api/tags/Redis.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Redis%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">Redis概述</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">基础知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Redis%E4%BA%94%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">Redis五大基础类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E5%A4%A7%E7%89%B9%E6%AE%8A%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">三大特殊类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">基础命令</span></a></li></ol></li></ol>","author":{"name":"小益子","slug":"blog-author","avatar":"/images/HeadPhoto.jpg","link":"/","description":"小益子的个人博客","socials":{"github":"https://github.com/doubly-yi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_18335837","juejin":"","customs":{"gitee":{"icon":"/icons/gitee2.svg","link":"https://gitee.com/doubly"},"bilibili":{"icon":"/icons/bilibili.svg","link":"https://space.bilibili.com/294694129"}}}},"mapped":true,"prev_post":{"title":"2. Redis事务","uid":"ec09385bf6fd223c8e8314533a8c47e9","slug":"Redis/2. Redis事务","date":"2021-10-20T14:49:22.000Z","updated":"2021-10-20T15:42:16.478Z","comments":true,"path":"api/articles/Redis/2. Redis事务.json","keywords":null,"cover":"/images/default-cover.jpg","text":" Redis事务本质 一组命令的集合！一个事务中的所有命令都会被序列化，在事务执行过程中，会按照顺序执行 Redis事务特点 一次性 顺序性 排他性 ==Redis单条命令是保证原子性的，但是事务不保证原子性。== ==Redis事务没有隔离级别的概念== 事务执行命令 127....","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"Redis","slug":"Redis","count":10,"path":"api/tags/Redis.json"}],"author":{"name":"小益子","slug":"blog-author","avatar":"/images/HeadPhoto.jpg","link":"/","description":"小益子的个人博客","socials":{"github":"https://github.com/doubly-yi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_18335837","juejin":"","customs":{"gitee":{"icon":"/icons/gitee2.svg","link":"https://gitee.com/doubly"},"bilibili":{"icon":"/icons/bilibili.svg","link":"https://space.bilibili.com/294694129"}}}}},"next_post":{"title":"0. NoSQL概述","uid":"2d40603b2799bf1e42342c1fcddf6a6a","slug":"Redis/0. NoSQL概述","date":"2021-10-20T14:49:20.000Z","updated":"2021-10-20T15:42:10.616Z","comments":true,"path":"api/articles/Redis/0. NoSQL概述.json","keywords":null,"cover":"/images/default-cover.jpg","text":"NoSQL概述为什么要用NoSql？ 数据量如果太大，一个机器放不下 数据的索引（如MySQL的B+Tree，300万一定要建立索引），一个机器内存也放不下 访问量（读写混合），一个服务器承受不了 用户的个人信息、社交网络、地理位置、用户自己产生的数据、用户日志等等爆发式增长！这...","link":"","photos":[],"count_time":{"symbolsCount":781,"symbolsTime":"1 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"Redis","slug":"Redis","count":10,"path":"api/tags/Redis.json"}],"author":{"name":"小益子","slug":"blog-author","avatar":"/images/HeadPhoto.jpg","link":"/","description":"小益子的个人博客","socials":{"github":"https://github.com/doubly-yi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_18335837","juejin":"","customs":{"gitee":{"icon":"/icons/gitee2.svg","link":"https://gitee.com/doubly"},"bilibili":{"icon":"/icons/bilibili.svg","link":"https://space.bilibili.com/294694129"}}}}}}