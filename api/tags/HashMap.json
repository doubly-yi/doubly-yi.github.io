{"name":"HashMap","slug":"HashMap","count":1,"postlist":[{"title":"HashMap与ConcurrentHashMap源码分析","uid":"3689e206f36869899ed85f878a46311b","slug":"Java/HashMap与ConcurrentHashMap源码分析","date":"2022-01-03T22:49:09.000Z","updated":"2022-01-06T14:42:50.490Z","comments":true,"path":"api/articles/Java/HashMap与ConcurrentHashMap源码分析.json","keywords":null,"cover":"/images/default-cover2.jpg","text":"JDK 1.7中HashMap以数组+链表（单向链表）的形式存储，以Entry对象存储 HashMap中的Entry对象数组： Entry对象中的next指针： 构造方法构造方法传入初始容量和加载因子，对HashMap中的属性加载因子和阈值进行赋值。调用空参则进行则会赋默认值。 ...","link":"","photos":[],"count_time":{"symbolsCount":"7.2k","symbolsTime":"7 mins."},"categories":[{"name":"Java","slug":"Java","count":10,"path":"api/categories/Java.json"}],"tags":[{"name":"HashMap","slug":"HashMap","count":1,"path":"api/tags/HashMap.json"},{"name":"ConcurrentHashMap","slug":"ConcurrentHashMap","count":1,"path":"api/tags/ConcurrentHashMap.json"}],"author":{"name":"小益子","slug":"blog-author","avatar":"/images/HeadPhoto.jpg","link":"/","description":"小益子的个人博客","socials":{"github":"https://github.com/doubly-yi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_18335837","juejin":"","customs":{"gitee":{"icon":"/icons/gitee2.svg","link":"https://gitee.com/doubly"},"bilibili":{"icon":"/icons/bilibili.svg","link":"https://space.bilibili.com/294694129"}}}},"feature":true}]}